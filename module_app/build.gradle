apply plugin: 'com.android.application'

android {
    compileSdkVersion build_versions.compile_sdk
    defaultConfig {
        applicationId "com.sjw.mymodulepattern"
        //-----------------每个要用到极光推送的都要这段配置
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.sjw.mymodulepattern",
                JPUSH_APPKEY : "13acf59d24ad6a6000977450", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        //-----------------每个要用到极光推送的都要这段配置

        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //bugly使用
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.multidex


    if (!isModule.toBoolean()) {


        implementation project(':module_main')
        implementation project(':module_list')
        implementation project(':lib_jpush')
//          implementation project(':lib_common')

    }
}
